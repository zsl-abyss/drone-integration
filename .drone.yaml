kind: pipeline
type: docker
name: run-tests

volumes:
  - name: logs
    host:
      path: /mnt/logs

steps:
- name: launch-worker

  # The pre-requisite packages/software are already present in this image.
  image: 325729004853.dkr.ecr.ap-southeast-2.amazonaws.com/ubuntu:22.04-for-launch-worker

  volumes:
  - name: logs
    path: /mnt/logs
  environment:
    DEBIAN_FRONTEND: noninteractive
    DEBCONF_NONINTERACTIVE_SEEN: true
  commands:
  # Create specification of drone worker's instance and run that instance.
  - ./drone/create_cli_input_yaml.py $DRONE_REPO $DRONE_COMMIT_BRANCH $DRONE_COMMIT_SHA $DRONE_BUILD_NUMBER
  - aws ec2 run-instances --region ap-southeast-2 --cli-input-yaml file://cli-input.yaml

  # Wait for the instance to terminate and collect generated logs (if any).
  - export INSTANCE_NAME=drone-worker:$DRONE_REPO:$DRONE_COMMIT_BRANCH:$DRONE_COMMIT_SHA:$DRONE_BUILD_NUMBER
  - export LOGS_DIR=/mnt/logs/$INSTANCE_NAME
  - echo "Waiting for $INSTANCE_NAME to terminate..."
  - ./drone/check-ec2-state.sh $INSTANCE_NAME terminated 12 -1
  - if [ "$(ls $LOGS_DIR)" ]; then head -n -0 $LOGS_DIR/*; fi

  # Determine success/failure.
  - |
    for logname in $LOGS_DIR/docker-run-*.log; do
      exit_code=$(tail -n 1 $logname)
      if [ $exit_code != 0 ]; then
        exit 1
      fi
    done
