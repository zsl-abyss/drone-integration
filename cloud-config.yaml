#cloud-config

# Create the docker group.
groups:
  - docker

# Add default auto created user to docker group.
system_info:
  default_user:
    groups: [docker]

# Update and upgrade packages.
package_upgrade: true

runcmd:
  # Install pre-requisite packages and Docker.
  - |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg |
      apt-key add -
  - |
    add-apt-repository \
      "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - apt-get update -y
  - |
    apt-get install -y \
      containerd.io \
      docker-ce \
      docker-ce-cli \
      awscli \
      binutils \
      s3fs

  # Enable docker service.
  - systemctl start docker
  - systemctl enable docker

  # Create mount points.
  - |
    for dn in logs pond rapid vault; do
      mkdir -p /mnt/$dn
    done
  # Mount S3 buckets.
  - |
    for dn in pond vault; do
      s3fs \
        dataforce-dev:/remotes/$dn /mnt/$dn \
        -o iam_role=dataforce-dev-access \
        -o url=http://s3.ap-southeast-2.amazonaws.com \
        -o allow_other \
        -o use_cache=/tmp
    done

  # Setup environment.
  - export ECR=325729004853.dkr.ecr.ap-southeast-2.amazonaws.com
  - export IMAGE_URI=$ECR/abyss/abyss-fabric:test
  - export INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
  - |
    export INSTANCE_NAME=$(
      aws ec2 describe-tags \
        --region ap-southeast-2 \
        --filters "Name=resource-id,Values=$INSTANCE_ID" "Name=key,Values=Name" \
        --query "Tags[0].Value" \
        --output text
    )
  - export LOGS_DIR=/mnt/logs/$INSTANCE_NAME
  - mkdir -p $LOGS_DIR

  # Constitution test deploys to this instance of mongodb.
  - docker run --rm --network host --detach mongo

  # Run tests on docker containers.
  - |
    aws ecr get-login-password \
      --region ap-southeast-2 |
      docker login \
        --username AWS \
        --password-stdin \
        $ECR

  - |
    # "make test-python-long"
    # "make test-constitution-gold"
    # "make test-constitution-gold-ri"
    for command in \
      "make test"
    do
      container_id=$(
        docker run \
          --env TERM=dumb \
          --network host \
          --volume /mnt/pond:/mnt/pond \
          --volume /mnt/vault:/mnt/vault \
          --volume /mnt/rapid:/mnt/rapid \
          --workdir /root/src/abyss/abyss-fabric \
          --detach \
          $IMAGE_URI \
          $command
      )
      exit_code=$(docker container wait $container_id)
      logname_part=$(echo $command | sed 's/ /-/g')
      docker container logs $container_id \
        > $LOGS_DIR/docker-run-$logname_part.log
      echo $exit_code >> $LOGS_DIR/docker-run-$logname_part.log
      docker container rm $container_id
    done

  # cloud-init log files include more detailed logging data.
  - cp /var/log/cloud-init* $LOGS_DIR/

  # Copy locally generated data to S3 bucket.
  - |
    for dn in logs rapid; do
      aws s3 cp --recursive /mnt/$dn s3://dataforce-dev/remotes/$dn
    done

  # Shutdown the instance.
  - shutdown --poweroff now
